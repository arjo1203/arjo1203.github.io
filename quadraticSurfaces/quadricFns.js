//x^2 + y^2 - z^2 + w^2
var fn1 = '((cos(theta14)*cos(theta13)*cos(theta12)*x1-cos(theta14)*cos(theta13)*sin(theta12)*x2-cos(theta14)*sin(theta13)*x3-sin(theta14)*x4)*cos(theta14)*cos(theta13)*cos(theta12)+(x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))-x4*sin(theta24)*cos(theta14))*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))+(x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))+x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))+x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))+x4*cos(theta34)*cos(theta24)*cos(theta14))*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12)))*x1+(-(cos(theta14)*cos(theta13)*cos(theta12)*x1-cos(theta14)*cos(theta13)*sin(theta12)*x2-cos(theta14)*sin(theta13)*x3-sin(theta14)*x4)*cos(theta14)*cos(theta13)*sin(theta12)+(x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))-x4*sin(theta24)*cos(theta14))*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))+(x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))+x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))+x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))+x4*cos(theta34)*cos(theta24)*cos(theta14))*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12)))*x2+(-(cos(theta14)*cos(theta13)*cos(theta12)*x1-cos(theta14)*cos(theta13)*sin(theta12)*x2-cos(theta14)*sin(theta13)*x3-sin(theta14)*x4)*cos(theta14)*sin(theta13)+(x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))-x4*sin(theta24)*cos(theta14))*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))+(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+(x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))+x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))+x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))+x4*cos(theta34)*cos(theta24)*cos(theta14))*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13)))*x3+(-(cos(theta14)*cos(theta13)*cos(theta12)*x1-cos(theta14)*cos(theta13)*sin(theta12)*x2-cos(theta14)*sin(theta13)*x3-sin(theta14)*x4)*sin(theta14)-(x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))-x4*sin(theta24)*cos(theta14))*sin(theta24)*cos(theta14)-(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*sin(theta34)*cos(theta24)*cos(theta14)+(x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))+x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))+x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))+x4*cos(theta34)*cos(theta24)*cos(theta14))*cos(theta34)*cos(theta24)*cos(theta14))*x4';

//x^2 + y^2 - z^2 - w^2
var fn2 = '((x1*cos(theta14)*cos(theta13)*cos(theta12)-x2*cos(theta14)*cos(theta13)*sin(theta12)-x3*cos(theta14)*sin(theta13)-x4*sin(theta14))*cos(theta14)*cos(theta13)*cos(theta12)+(x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))-x4*sin(theta24)*cos(theta14))*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))+(-x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))-x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))-x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))-x4*cos(theta34)*cos(theta24)*cos(theta14))*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12)))*x1+(-(x1*cos(theta14)*cos(theta13)*cos(theta12)-x2*cos(theta14)*cos(theta13)*sin(theta12)-x3*cos(theta14)*sin(theta13)-x4*sin(theta14))*cos(theta14)*cos(theta13)*sin(theta12)+(x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))-x4*sin(theta24)*cos(theta14))*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))+(-x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))-x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))-x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))-x4*cos(theta34)*cos(theta24)*cos(theta14))*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12)))*x2+(-(x1*cos(theta14)*cos(theta13)*cos(theta12)-x2*cos(theta14)*cos(theta13)*sin(theta12)-x3*cos(theta14)*sin(theta13)-x4*sin(theta14))*cos(theta14)*sin(theta13)+(x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))-x4*sin(theta24)*cos(theta14))*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))+(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+(-x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))-x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))-x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))-x4*cos(theta34)*cos(theta24)*cos(theta14))*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13)))*x3+(-(x1*cos(theta14)*cos(theta13)*cos(theta12)-x2*cos(theta14)*cos(theta13)*sin(theta12)-x3*cos(theta14)*sin(theta13)-x4*sin(theta14))*sin(theta14)-(x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))-x4*sin(theta24)*cos(theta14))*sin(theta24)*cos(theta14)-(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*sin(theta34)*cos(theta24)*cos(theta14)+(-x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))-x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))-x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))-x4*cos(theta34)*cos(theta24)*cos(theta14))*cos(theta34)*cos(theta24)*cos(theta14))*x4';

//x^2 - y^2 - z^2 - w^2
var fn3 = '((x1*cos(theta14)*cos(theta13)*cos(theta12)-x2*cos(theta14)*cos(theta13)*sin(theta12)-x3*cos(theta14)*sin(theta13)-x4*sin(theta14))*cos(theta14)*cos(theta13)*cos(theta12)+(-x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))-x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))-x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))+x4*sin(theta24)*cos(theta14))*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))+(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))+(-x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))-x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))-x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))-x4*cos(theta34)*cos(theta24)*cos(theta14))*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12)))*x1+(-(x1*cos(theta14)*cos(theta13)*cos(theta12)-x2*cos(theta14)*cos(theta13)*sin(theta12)-x3*cos(theta14)*sin(theta13)-x4*sin(theta14))*cos(theta14)*cos(theta13)*sin(theta12)+(-x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))-x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))-x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))+x4*sin(theta24)*cos(theta14))*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))+(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))+(-x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))-x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))-x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))-x4*cos(theta34)*cos(theta24)*cos(theta14))*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12)))*x2+(-(x1*cos(theta14)*cos(theta13)*cos(theta12)-x2*cos(theta14)*cos(theta13)*sin(theta12)-x3*cos(theta14)*sin(theta13)-x4*sin(theta14))*cos(theta14)*sin(theta13)+(-x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))-x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))-x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))+x4*sin(theta24)*cos(theta14))*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))+(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+(-x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))-x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))-x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))-x4*cos(theta34)*cos(theta24)*cos(theta14))*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13)))*x3+(-(x1*cos(theta14)*cos(theta13)*cos(theta12)-x2*cos(theta14)*cos(theta13)*sin(theta12)-x3*cos(theta14)*sin(theta13)-x4*sin(theta14))*sin(theta14)-(-x1*((-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*cos(theta12)+cos(theta24)*cos(theta23)*sin(theta12))-x2*(-(-sin(theta24)*sin(theta14)*cos(theta13)-cos(theta24)*sin(theta23)*sin(theta13))*sin(theta12)+cos(theta24)*cos(theta23)*cos(theta12))-x3*(sin(theta24)*sin(theta14)*sin(theta13)-cos(theta24)*sin(theta23)*cos(theta13))+x4*sin(theta24)*cos(theta14))*sin(theta24)*cos(theta14)-(-x1*((-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*sin(theta12))-x2*(-(-sin(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(-sin(theta34)*sin(theta24)*cos(theta23)+cos(theta34)*sin(theta23))*cos(theta12))-x3*(sin(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(sin(theta34)*sin(theta24)*sin(theta23)+cos(theta34)*cos(theta23))*cos(theta13))+x4*sin(theta34)*cos(theta24)*cos(theta14))*sin(theta34)*cos(theta24)*cos(theta14)+(-x1*((cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*cos(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*sin(theta12))-x2*(-(cos(theta34)*cos(theta24)*sin(theta14)*cos(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*sin(theta13))*sin(theta12)+(cos(theta34)*sin(theta24)*cos(theta23)+sin(theta34)*sin(theta23))*cos(theta12))-x3*(-cos(theta34)*cos(theta24)*sin(theta14)*sin(theta13)+(-cos(theta34)*sin(theta24)*sin(theta23)+sin(theta34)*cos(theta23))*cos(theta13))-x4*cos(theta34)*cos(theta24)*cos(theta14))*cos(theta34)*cos(theta24)*cos(theta14))*x4';

var infiniteFnParsed = personalParser(fn1);
var infiniteFn = buildFunction(infiniteFnParsed);